
#sensor:

### Random Sensors ###

  - platform: sonarr_upcoming_media
    api_key: !secret sonarr_api
    host: !secret sonarr_ip
    port: 8989
    days: 2
    ssl: false
    max: 10
  - platform: radarr_upcoming_media
    api_key: !secret radarr_api
    host: !secret radarr_ip
    port: 7878
    days: 31
    ssl: false
    theaters: false
    max: 10
  - platform: plex_recently_added
    token: !secret plex_token
    host: !secret plex_ip
    port: 32400
    ssl: false
    ssl_cert: false
    download_images: true
    max: 5
    section_types:
    - movie
    - show
  - platform: template
    sensors:
      last_alexa:
        value_template: >
          {{ states.media_player | selectattr('attributes.last_called','eq',True) | map(attribute='entity_id') | first }}
  - platform: time_date
    display_options:
      - 'time_utc'





### Temperature Sensors ###

  - platform: mqtt
    name: "Outside Temperature"
    state_topic: "tele/terraced1mini/SENSOR"
    value_template: "{{ value_json['DS18B20'].Temperature }}"
    unit_of_measurement: '°C'
  - platform: mqtt
    name: "Charlies Room Temperature"
    state_topic: "tele/charliesmultisensor/SENSOR"
    value_template: "{{ (value_json['SHT3X-0x44'].Temperature - 2.5)|float|round(2) }}"
    unit_of_measurement: '°C'

  - platform: average
    name: 'Average Household Temperature'
    entities:
      - sensor.charlies_room_temperature
      - sensor.bedroom_temperature
      - sensor.kitchen_temperature
      - sensor.laundry_room_temperature
      - sensor.lias_room_temperature
      - sensor.living_room_temperature





### Humidity Sensors ###

  - platform: mqtt
    name: "Charlies Room Humidity"
    state_topic: "tele/charliesmultisensor/SENSOR"
    value_template: "{{ value_json['SHT3X-0x44'].Humidity }}"
    unit_of_measurement: '%'
    icon: mdi:water-percent





### Brightness Sensors ###

  - platform: mqtt
    name: "Charlies Room Brightness"
    state_topic: "tele/charliesmultisensor/SENSOR"
    value_template: "{{ value_json['BH1750'].Illuminance }}"
    unit_of_measurement: 'lx'
    icon: mdi:brightness-5





### Hassio Stats Sensors ###

  - platform: template
    sensors:
      count_switches:
        friendly_name: "Switches"
        value_template: "{{ states.switch | count }}"
  - platform: template
    sensors:
      count_lights:
        friendly_name: "Lights"
        value_template: "{{ states.light | count }}"
  - platform: template
    sensors:
      count_automations:
        friendly_name: "Automate"
        value_template: "{{ states.automation | count }}"
  - platform: template
    sensors:
      count_sensors:
        friendly_name: "sensors"
        value_template: "{{ states.sensor | count }}"
  - platform: template
    sensors:
      count_binary_sensors:
        friendly_name: "Binary"
        value_template: "{{ states.binary_sensor | count }}"
  - platform: template
    sensors:
      count_media_players:
        friendly_name: "Media"
        value_template: "{{ states.media_player | count }}"
  - platform: template
    sensors:
      count_cameras:
        friendly_name: "Cameras"
        value_template: "{{ states.camera | count }}"
  - platform: template
    sensors:
      count_air_conditioners:
        friendly_name: "Air Cons"
        value_template: "{{ states.climate | count }}"
  - platform: template
    sensors:
      count_scripts:
        friendly_name: "Scripts"
        value_template: "{{ states.script | count }}"





### Energy Monitoring Plugs ###

  - platform: mqtt
    name: "Boiler Power"
    state_topic: "tele/boilerplug/SENSOR"
    value_template: "{{ value_json.ENERGY.Power }}"
    unit_of_measurement: 'Watts'
  - platform: mqtt
    name: "Boiler Current"
    state_topic: "tele/boilerplug/SENSOR"
    value_template: "{{ value_json.ENERGY.Current }}"
    unit_of_measurement: 'Amps'
  - platform: mqtt
    name: "Boiler Energy Today"
    state_topic: "tele/boilerplug/SENSOR"
    value_template: "{{ value_json.ENERGY.Today }}"
    unit_of_measurement: 'Kwh'
  - platform: mqtt
    name: "Washing Machine Power"
    state_topic: "tele/washingmachine/SENSOR"
    value_template: "{{ value_json.ENERGY.Power }}"
    unit_of_measurement: 'Watts'
  - platform: mqtt
    name: "Washing Machine Current"
    state_topic: "tele/washingmachine/SENSOR"
    value_template: "{{ value_json.ENERGY.Current }}"
    unit_of_measurement: 'Amps'
  - platform: mqtt
    name: "Washing Machine Energy Today"
    state_topic: "tele/washingmachine/SENSOR"
    value_template: "{{ value_json.ENERGY.Today }}"
    unit_of_measurement: 'Kwh'
  - platform: mqtt
    name: "Dishwasher Power"
    state_topic: "tele/dishwasherplug/SENSOR"
    value_template: "{{ value_json.ENERGY.Power }}"
    unit_of_measurement: 'Watts'
  - platform: mqtt
    name: "Dishwasher Current"
    state_topic: "tele/dishwasherplug/SENSOR"
    value_template: "{{ value_json.ENERGY.Current }}"
    unit_of_measurement: 'Amps'
  - platform: mqtt
    name: "Dishwasher Energy Today"
    state_topic: "tele/dishwasherplug/SENSOR"
    value_template: "{{ value_json.ENERGY.Today }}"
    unit_of_measurement: 'Kwh'

  - platform: mqtt
    name: "Tumble Dryer Power"
    state_topic: "shellies/shellyplug-s-50DADA/relay/0/power"
    unit_of_measurement: "Watts"
  - platform: template
    sensors:
      tumble_dryer_current:
        friendly_name: Tumble Dryer Current
        value_template: '{{ ((states.sensor.tumble_dryer_power.state | float / 235)) | round(2) }}'
        unit_of_measurement: 'Amps'





### Home Power Monitoring ###

  - platform: mqtt
    name: "Shelly EM Power"
    state_topic: "tele/shellyem/SENSOR"
    value_template: "{{ value_json.ENERGY.Power[-1] }}"
    unit_of_measurement: "W"    
  - platform: integration
    source: sensor.shelly_em_power
    name: "Shelly EM Energy"
    unit_prefix: k
    round: 2

  - platform: template
    sensors:
      current_energy_cost:
        friendly_name: Current Energy Cost
        value_template: >
            {% if utcnow().hour in [11, 12, 13, 14, 15, 16, 17, 18, 19, 20] %}
              {{  (((((((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.peak_price.state|float))+0.022)/100*5.11)+((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.peak_price.state|float))+0.022+0.001)/100*21)+(((((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.peak_price.state|float))+0.022)/100*5.11)+((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.peak_price.state|float))+0.022+0.001))|round(2) }}           
            {% else %}
              {{  (((((((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.offpeak_price.state|float))+0.022)/100*5.11)+((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.offpeak_price.state|float))+0.022+0.001)/100*21)+(((((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.offpeak_price.state|float))+0.022)/100*5.11)+((states.sensor.shelly_em_power.state|float)/1000*(states.input_number.offpeak_price.state|float))+0.022+0.001))|round(2) }}           
            {% endif %}
        unit_of_measurement: '€'

  - platform: template
    sensors:
      todays_energy_cost_peak:
        value_template: '{{ ((states.sensor.home_energy_meter_daily_peak.state|float)*(states.input_number.peak_price.state|float)) |round(2) }}'
        unit_of_measurement: '€'
  - platform: template
    sensors:
      todays_energy_cost_offpeak:
        value_template: '{{ ((states.sensor.home_energy_meter_daily_offpeak.state|float)*(states.input_number.offpeak_price.state|float)) |round(2) }}'
        unit_of_measurement: '€'
  - platform: template
    sensors:
      todays_energy_cost:
        friendly_name: Todays Energy Cost
        value_template: '{{ ((((((states.sensor.todays_energy_cost_peak.state|float)+(states.sensor.todays_energy_cost_offpeak.state|float)+0.53)/100*5.11)+(states.sensor.todays_energy_cost_peak.state|float)+(states.sensor.todays_energy_cost_offpeak.state|float)+0.53+0.025)/100*21)+((((states.sensor.todays_energy_cost_peak.state|float)+(states.sensor.todays_energy_cost_offpeak.state|float)+0.53)/100*5.11)+(states.sensor.todays_energy_cost_peak.state|float)+(states.sensor.todays_energy_cost_offpeak.state|float)+0.53+0.025))|round(2) }}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      this_weeks_energy_cost_peak:
        value_template: '{{ ((states.sensor.home_energy_meter_weekly_peak.state|float)*(states.input_number.peak_price.state|float)) |round(2) }}'
        unit_of_measurement: '€'
  - platform: template
    sensors:
      this_weeks_energy_cost_offpeak:
        value_template: '{{ ((states.sensor.home_energy_meter_weekly_offpeak.state|float)*(states.input_number.offpeak_price.state|float)) |round(2) }}'
        unit_of_measurement: '€'
  - platform: template
    sensors:
      this_weeks_energy_cost:
        friendly_name: This Weeks Energy Cost
        value_template: '{{ ((((((states.sensor.this_weeks_energy_cost_peak.state|float)+(states.sensor.this_weeks_energy_cost_offpeak.state|float)+4)/100*5.11)+(states.sensor.this_weeks_energy_cost_peak.state|float)+(states.sensor.this_weeks_energy_cost_offpeak.state|float)+4+0.185)/100*21)+((((states.sensor.this_weeks_energy_cost_peak.state|float)+(states.sensor.this_weeks_energy_cost_offpeak.state|float)+4)/100*5.11)+(states.sensor.this_weeks_energy_cost_peak.state|float)+(states.sensor.this_weeks_energy_cost_offpeak.state|float)+4+0.185))|round(2) }}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      this_months_energy_cost_peak:
        value_template: '{{ ((states.sensor.home_energy_meter_monthly_peak.state|float)*(states.input_number.peak_price.state|float)) |round(2) }}'
        unit_of_measurement: '€'
  - platform: template
    sensors:
      this_months_energy_cost_offpeak:
        value_template: '{{ ((states.sensor.home_energy_meter_monthly_offpeak.state|float)*(states.input_number.offpeak_price.state|float)) |round(2) }}'
        unit_of_measurement: '€'
  - platform: template
    sensors:
      this_months_energy_cost:
        friendly_name: This Months Energy Cost
        value_template: '{{ ((((((states.sensor.this_months_energy_cost_peak.state|float)+(states.sensor.this_months_energy_cost_offpeak.state|float)+16)/100*5.11)+(states.sensor.this_months_energy_cost_peak.state|float)+(states.sensor.this_months_energy_cost_offpeak.state|float)+16+0.74)/100*21)+((((states.sensor.this_months_energy_cost_peak.state|float)+(states.sensor.this_months_energy_cost_offpeak.state|float)+16)/100*5.11)+(states.sensor.this_months_energy_cost_peak.state|float)+(states.sensor.this_months_energy_cost_offpeak.state|float)+16+0.74))|round(2) }}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      yesterdays_energy_peak:
        value_template: "{{ state_attr('sensor.home_energy_meter_daily_peak', 'last_period') }}"
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      yesterdays_energy_offpeak:
        value_template: "{{ state_attr('sensor.home_energy_meter_daily_offpeak', 'last_period') }}"
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      yesterdays_energy:
        friendly_name: Yesterdays Energy
        value_template: '{{ ((states.sensor.yesterdays_energy_peak.state|float)+(states.sensor.yesterdays_energy_offpeak.state|float))|round(2) }}'
        unit_of_measurement: 'Kw/h'

  - platform: template
    sensors:
      last_weeks_energy_peak:
        value_template: "{{ state_attr('sensor.home_energy_meter_weekly_peak', 'last_period') }}"
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      last_weeks_energy_offpeak:
        value_template: "{{ state_attr('sensor.home_energy_meter_weekly_offpeak', 'last_period') }}"
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      last_weeks_energy:
        friendly_name: Last Weeks Energy
        value_template: '{{ ((states.sensor.last_weeks_energy_peak.state|float)+(states.sensor.last_weeks_energy_offpeak.state|float))|round(2) }}'
        unit_of_measurement: 'Kw/h'

  - platform: template
    sensors:
      last_months_energy_peak:
        value_template: "{{ state_attr('sensor.home_energy_meter_monthly_peak', 'last_period') }}"
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      last_months_energy_offpeak:
        value_template: "{{ state_attr('sensor.home_energy_meter_monthly_offpeak', 'last_period') }}"
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      last_months_energy:
        friendly_name: Last Months Energy
        value_template: '{{ ((states.sensor.last_months_energy_peak.state|float)+(states.sensor.last_months_energy_offpeak.state|float))|round(2) }}'
        unit_of_measurement: 'Kw/h'

  - platform: template
    sensors:
      todays_energy:
        friendly_name: Todays Energy
        value_template: '{{ ((states.sensor.home_energy_meter_daily_peak.state|float)+(states.sensor.home_energy_meter_daily_offpeak.state|float))|round(2) }}'
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      this_weeks_energy:
        friendly_name: This Weeks Energy
        value_template: '{{ ((states.sensor.home_energy_meter_weekly_peak.state|float)+(states.sensor.home_energy_meter_weekly_offpeak.state|float))|round(2) }}'
        unit_of_measurement: 'Kw/h'
  - platform: template
    sensors:
      this_months_energy:
        friendly_name: This Months Energy
        value_template: '{{ ((states.sensor.home_energy_meter_monthly_peak.state|float)+(states.sensor.home_energy_meter_monthly_offpeak.state|float))|round(2) }}'
        unit_of_measurement: 'Kw/h'

  - platform: template
    sensors:
      peak_max_price: 
        value_template: "{{ (((state_attr('sensor.pvpc', 'price_13h'))+(state_attr('sensor.pvpc', 'price_14h'))+(state_attr('sensor.pvpc', 'price_15h'))+(state_attr('sensor.pvpc', 'price_16h'))+(state_attr('sensor.pvpc', 'price_17h'))+(state_attr('sensor.pvpc', 'price_18h'))+(state_attr('sensor.pvpc', 'price_19h'))+(state_attr('sensor.pvpc', 'price_20h'))+(state_attr('sensor.pvpc', 'price_21h'))+(state_attr('sensor.pvpc', 'price_22h')))/10)|round(3) }}"
  - platform: template
    sensors:
      offpeak_max_price: 
        value_template: "{{ (((state_attr('sensor.pvpc', 'price_23h'))+(state_attr('sensor.pvpc', 'price_00h'))+(state_attr('sensor.pvpc', 'price_01h'))+(state_attr('sensor.pvpc', 'price_02h'))+(state_attr('sensor.pvpc', 'price_03h'))+(state_attr('sensor.pvpc', 'price_04h'))+(state_attr('sensor.pvpc', 'price_05h'))+(state_attr('sensor.pvpc', 'price_06h'))+(state_attr('sensor.pvpc', 'price_07h'))+(state_attr('sensor.pvpc', 'price_08h'))+(state_attr('sensor.pvpc', 'price_09h'))+(state_attr('sensor.pvpc', 'price_10h'))+(state_attr('sensor.pvpc', 'price_11h'))+(state_attr('sensor.pvpc', 'price_12h')))/14)|round(3) }}"

  - platform: template
    sensors:
      last_months_energy_cost:
        friendly_name: Last Months Energy Cost
        value_template: '{{ (states.input_number.energy_cost_last_month.state|float) }}'
        unit_of_measurement: '€'

  - platform: template
    sensors:
      peak_price:
        friendly_name: Peak Price
        value_template: '{{ (states.input_number.peak_price.state) }}'
        unit_of_measurement: '€'
  - platform: template
    sensors:
      offpeak_price:
        friendly_name: Offpeak Price
        value_template: '{{ (states.input_number.offpeak_price.state) }}'
        unit_of_measurement: '€'





### Custom Sensors ###

  - platform: template
    sensors:
      washing_machine_state:
        friendly_name: "Washing Machine State"
        value_template: >-
          {% if is_state('switch.washing_machine_plug', 'off') %}
            Off
          {% elif states('sensor.washing_machine_power')|float > 120 %}
            Washing
          {% else %}
            Idle
          {% endif %}
  - platform: template
    sensors:
      tumble_dryer_state:
        friendly_name: "Tumble Dryer State"
        value_template: >-
          {% if is_state('switch.tumble_dryer_plug', 'off') %}
            Off
          {% elif states('sensor.tumble_dryer_power')|float > 50 %}
            Drying
          {% else %}
            Idle
          {% endif %}
  - platform: template
    sensors:
      boiler_state:
        friendly_name: "Boiler State"
        value_template: >-
          {% if is_state('switch.boiler_plug', 'off') %}
            Off
          {% elif states('sensor.boiler_power')|float > 50 %}
            Heating
          {% else %}
            Idle
          {% endif %}
  - platform: template
    sensors:
      dishwasher_state:
        friendly_name: "Dishwasher State"
        value_template: >-
          {% if is_state('switch.dishwasher_plug', 'off') %}
            Off
          {% elif states('sensor.dishwasher_power')|float > 120 %}
            Cleaning
          {% else %}
            Idle
          {% endif %}
  - platform: template
    sensors:
      printer:
        friendly_name: "Printer"
        value_template: >-
          {% if is_state('sensor.dcp_j315w_status', 'por favor espere') %}
            Printing
          {% elif is_state('sensor.dcp_j315w_status', 'comprobar papel') %}
            Check Paper Tray
          {% else %}
            In Standby
          {% endif %}
  - platform: template
    sensors:
      water_machine_state:
        friendly_name: "Water Machine State"
        value_template: >-
          {% if is_state('switch.water_machine_plug', 'off') %}
            Off
          {% elif states('sensor.water_machine_power')|float > 10 and states('sensor.water_machine_power')|float < 100 %}
            Cooling
          {% elif states('sensor.water_machine_power')|float >= 100 %}
            Heating
          {% else %}
            Idle
          {% endif %}





### Test Sensors ###

  - platform: mqtt
    name: "D1Relay Temperature"
    state_topic: "tele/d1relay/SENSOR"
    value_template: "{{ value_json['SI7021'].Temperature }}"
    unit_of_measurement: '°C'

  - platform: template
    sensors:
      d1difference:
        friendly_name: "D1 Difference"
        unit_of_measurement: '°C'
        value_template: "{{ (states.sensor.charlies_room_temperature.state | float) - (states.sensor.d1relay_temperature.state | float) | float(2) }}"

  - platform: average
    name: 'Average Diffenence'
    duration:
      days: 1
    entities:
      - sensor.d1difference






